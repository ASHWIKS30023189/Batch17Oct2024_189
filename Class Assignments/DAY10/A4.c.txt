A4.
#include <stdio.h>

void rot(int arr[], int n, int k) {
    for (int i = 0; i < n; i += k) {
        int start = i;
        int end = (i + k - 1 < n) ? (i + k - 1) : (n - 1);

       
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }
}

void add(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() 
{
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int n = sizeof(arr) / sizeof(arr[0]);
    int k = 3;

    printf("Original array:\n");
    add(arr, n);

    rot(arr, n, k);

    printf("Array after rotation:\n");
    add(arr, n);

    return 0;
}

OUTPUT:
Original array:
1 2 3 4 5 6 7 8 9 
Array after rotation:
3 2 1 6 5 4 9 8 7 
